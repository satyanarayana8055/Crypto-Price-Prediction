name: CI/CD pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    env:
      DB_USER: ${{ secrets.DB_USER }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      DB_HOST: ${{ secrets.DB_HOST }}
      DB_PORT: ${{ secrets.DB_PORT }}
      DB_NAME: ${{ secrets.DB_NAME }}
      EMAIL_USER: ${{ secrets.EMAIL_USER }}
      EMAIL_PASSWORD: ${{ secrets.EMAIL_PASSWORD }}
      NOTIFICATION_EMAIL: ${{ secrets.NOTIFICATION_EMAIL }}
      FLASK_SECRET_KEY: ${{ secrets.FLASK_SECRET_KEY }}
      COINGECKO_API_KEY: ${{ secrets.COINGECKO_API_KEY }}
      R2: "0.05"
      MSE: "0.20"
      MAE: "1.0"
    steps:
      - uses: actions/checkout@v3

      - name: Set up python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Lint with flake8
        run: |
          pip install flake8 
          flake8 src tests

      - name: Set PYTHONPATH
        run: echo "PYTHONPATH=$PYTHONPATH:$(pwd)/src" >> $GITHUB_ENV

      - name: Run tests
        run: |
          pip install pytest
          pytest tests/


  build:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-actions@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME}}
          password: ${{ secrets.DOCKER_PASSWORD}}

      - name: Install dependencies
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/crypto-predictor:latest .
          docker push ${{ secrets.DOCKER_PASSWORD }}/crypto-predictor:latest
